<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.sb3.mybatis.mapper.UserMapper">

    <resultMap id="resultMap" type="org.example.sb3.mybatis.domain.User">
        <id column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="age" property="age"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <select id="getAllUsers" resultMap="resultMap">
        select id, user_name, age, create_time, update_time from t_user
    </select>

    <select id="findByUserName" resultMap="resultMap">
        select id, user_name, age, create_time, update_time from t_user where user_name = #{name}
    </select>

    <insert id="insertOne">
        insert into t_user(user_name, age) values(#{userName}, #{age})
    </insert>

    <insert id="insertOneWithDate">
        insert into t_user(user_name, age, create_time, update_time) values(#{userName}, #{age}, #{createTime},
        #{updateTime})
    </insert>

    <insert id="insertBatch" useGeneratedKeys="true" keyProperty="id">
        insert into t_user(user_name, age) values
        <foreach collection="userlist" separator="," item="item">
            (#{item.userName}, #{item.age})
        </foreach>
    </insert>

    <insert id="insertAndGetId" parameterType="org.example.sb3.mybatis.domain.User" useGeneratedKeys="true"
            keyProperty="id">
        <!--<selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">-->
        <!--    SELECT LAST_INSERT_ID()-->
        <!--</selectKey>-->
        insert into t_user(user_name, age) values(#{userName}, #{age})
    </insert>

    <select id="findByIndex" resultMap="resultMap">
        select id, user_name, age, create_time, update_time from t_user
        where user_name = #{param1} and age = #{param2}
    </select>

    <select id="findByMap" resultMap="resultMap">
        select id, user_name, age, create_time, update_time from t_user
        where user_name = #{userName} and age = #{age}
    </select>

    <select id="findByParam" resultMap="resultMap">
        select id, user_name, age, create_time, update_time from t_user
        where user_name = #{userName} and age = #{age}
    </select>

    <select id="namein" resultMap="resultMap">
        select id, user_name, age, create_time, update_time from t_user
        <where>
            <if test="names != null and names.size > 0">
                and user_name in
                <foreach collection="names" item="name" open="(" separator="," close=")">
                    #{name}
                </foreach>
            </if>
            <if test="name != null and name != ''">
                and user_name != #{name}
            </if>
        </where>
    </select>

    <!--要实现批量更新，首先得设置mysql支持批量操作，在jdbc链接中需要附加&allowMultiQueries=true属性才行-->
    <!--<update id="updateBatch">-->
    <!--    <foreach collection="userList" item="user" index="index" open="" close="" separator=";">-->
    <!--        update t_user-->
    <!--        <set>-->
    <!--            user_name = #{user.userName},-->
    <!--            age = #{user.age}-->
    <!--        </set>-->
    <!--        <where>-->
    <!--            and id = #{user.id}-->
    <!--        </where>-->
    <!--    </foreach>-->
    <!--</update>-->

    <update id="updateBatch" parameterType="java.util.List">
        update t_user
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="user_name = case" suffix="end,">
                <foreach collection="userList" item="user" index="index">
                    when id=#{user.id} then #{user.userName}
                </foreach>
            </trim>
            <trim prefix="age = case" suffix="end,">
                <foreach collection="userList" item="user" index="index">
                    when id=#{user.id} then #{user.age}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach collection="userList" index="index" item="user" separator="," open="(" close=")">
            #{user.id,jdbcType=BIGINT}
        </foreach>
    </update>
</mapper>
